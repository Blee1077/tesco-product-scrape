AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  tesco-scrape-pipeline

Globals:
  Function:
    Runtime: python3.9
    Handler: app.lambda_handler
    Timeout: 900
    Layers:
      - !Ref TescoScrapeUtilityLayer
    Architectures:
      - x86_64
    Environment:
      Variables:
        BUCKET_NAME: !Ref TescoScrapeS3Bucket # S3 bucket that will be made when stack deploys
        PROXY_DETAILS_KEY: "sock5_proxy.json" # JSON file that contains proxy details (you need to put this in TescoScrapeS3Bucket once stack has been deployed, structure defined in README)
        USER_AGENTS_KEY: "user_agents.pkl" # Pickle file that contains proxy details (you need to put this in TescoScrapeS3Bucket once stack has been deployed)

Parameters:
  SNSEmailParameter:
    Type: String
    Description: Enter email address for execution failure SNS topic subscription.

Resources:
  TescoScrapeStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/tesco_scrape_pipeline.asl.json
      DefinitionSubstitutions:
        PartitionCategoriesFunctionArn: !GetAtt PartitionCategoriesFunction.Arn
        ScrapeCategoriesFunctionArn: !GetAtt ScrapeCategoriesFunction.Arn
        CombineDataFunctionArn: !GetAtt CombineDataFunction.Arn
        UpdateProductTableFunctionArn: !GetAtt UpdateProductTableFunction.Arn
        ScrapeMissedProductsFunctionArn: !GetAtt ScrapeMissedProductsFunction.Arn
        PostprocessDataFunctionArn: !GetAtt PostprocessDataFunction.Arn
        UpdateMasterTableFunctionArn: !GetAtt UpdateMasterTableFunction.Arn
      Events:
        RunSchedule:
          Type: Schedule
          Properties:
            Description: Scrapes product details from Tesco website and stores in tesco-scrape-pipeline bucket.
            Enabled: true
            Schedule: cron(0 8 * * ? *) # Everyday at 8:00am UTC
            Input: '{"pages_per_partition": 50}'
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref PartitionCategoriesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ScrapeCategoriesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CombineDataFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref UpdateProductTableFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ScrapeMissedProductsFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref PostprocessDataFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref UpdateMasterTableFunction
  
  TescoScrapeS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: tesco-scrape-pipeline # This needs to be changed when you run it because I've taken this S3 bucket name
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: Expire non-current versions after a day
            Status: Enabled
            NoncurrentVersionExpiration:
              NoncurrentDays: 1
          - Id: Expire raw data after a day
            Prefix: raw_data/
            Status: Enabled
            ExpirationInDays: 1
          - Id: Expire intermediate data after a day
            Prefix: intermediate_data/
            Status: Enabled
            ExpirationInDays: 1
          - Id: Expire processed data after a day
            Prefix: processed_data/
            Status: Enabled
            ExpirationInDays: 1
      VersioningConfiguration:
        Status: Enabled
    DeletionPolicy: Retain

  TescoScrapeUtilityLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: util_layer
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: python3.9

  PartitionCategoriesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/1_partition_categories/
      MemorySize: 150
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref TescoScrapeS3Bucket

  ScrapeCategoriesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/2_scrape_categories/
      MemorySize: 185
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref TescoScrapeS3Bucket

  CombineDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/3_combine_data/
      MemorySize: 128
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref TescoScrapeS3Bucket

  UpdateProductTableFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/4_update_product_table/
      MemorySize: 150
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref TescoScrapeS3Bucket
  
  ScrapeMissedProductsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/5_scrape_missed_products/
      MemorySize: 200
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref TescoScrapeS3Bucket

  PostprocessDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/6_postprocess_all_data/
      MemorySize: 225
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref TescoScrapeS3Bucket

  UpdateMasterTableFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/7_update_master_table/
      MemorySize: 2500
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref TescoScrapeS3Bucket

  TescoScrapeFailureTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint: !Ref SNSEmailParameter
        Protocol: email
  
  ExecutionFailureAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      ActionsEnabled: true
      AlarmDescription: 'Sends an alarm when the tesco scrape pipeline state machine fails.'
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
         - Name: StateMachineArn
           Value: !Ref TescoScrapeStateMachine
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 21600
      Threshold: 1
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref TescoScrapeFailureTopic

Outputs:
  # RunSchedule is an implicit Schedule event rule created out of Events key under Serverless::StateMachine
  TescoScrapeStateMachineArn:
    Description: "Tesco Scrape State Machine machine ARN"
    Value: !Ref TescoScrapeStateMachine
  TescoScrapeStateMachineRoleArn:
    Description: "IAM Role created for Tesco Scrape State Machine based on the specified SAM Policy Templates"
    Value: !GetAtt TescoScrapeStateMachineRole.Arn
